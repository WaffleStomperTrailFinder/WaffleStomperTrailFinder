"use strict";angular.module("walkFilterApp",["ngAnimate","ngCookies","ngResource","ngSanitize","ngMaterial","ngMdIcons","rzModule","leaflet-directive","ui.slider","ui.bootstrap","ui.bootstrap-slider"]).config(["$logProvider","$locationProvider",function(a,b){a.debugEnabled(!1),b.html5Mode(!1),b.hashPrefix("map")}]),angular.module("walkFilterApp").controller("MainCtrl",["$scope","$rootScope","leafletData","$mdSidenav","$window","$timeout",function(a,b,c,d,e,f){a.toggleSidenav=function(a){d(a).toggle(),1==b.minMapData.ready&&(b.minMapData.ready=!1,f(function(){b.minMapData.ready=!0},10))},a.$on("remoteOpenMap",function(b){a.toggleSidenav("right")}),a.menuContentStyles={height:"500px"};var g=function(){var b=jQuery(window).height()-177;a.menuContentStyles.height=b.toString()+"px"};g(),f(function(){g()},500),angular.element(e).bind("resize",function(){g(),f(function(){g()},10)})}]).config(["$mdThemingProvider",function(a){var b=a.extendPalette("light-blue",{contrastDefaultColor:"light",contrastDarkColors:["50"],50:"ffffff"});a.definePalette("customBlue",b),a.theme("default").primaryPalette("customBlue",{"default":"500","hue-1":"50"}).accentPalette("pink"),a.theme("input","default").primaryPalette("grey")}]),angular.module("walkFilterApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]});var app=angular.module("walkFilterApp");app.controller("MapCtrl",["$scope","$rootScope","$log","$q","data","$timeout","getwalkmap","leafletData","$mdSidenav","magicNumbers","locationString",function(a,b,c,d,e,f,g,h,i,j,k){L.Icon.Default.imagePath="./images",a.mapData=j.getMapSetup(),b.markerFilterConfig=j.getMenuSetup(),a.selectedMinMap=null,a.filterVal={shown:!0},a.focusOnLastWalk=function(){var c=k.getInitalWalkHash(),d=e.getKeyFromMarkerHash(c.hash);if(d){var g=c.zoom;c.zoom?f(function(){b.$broadcast("remoteOpenMap",d,g)},300):b.$broadcast("remoteOpenMap",d),a.loadMinMapDetails(d)}},a.openSideBar=function(){b.$broadcast("remoteOpenMap")},a.$on("leafletDirectiveMarker.mainWalkMap.click",function(b,c){c.model&&c.model.data&&c.model.data.key&&(k.setWalkHash(e.getHashFromMarkerKey(c.model.data.key)),a.loadMinMapDetails(c.model.data.key))}),a.$on("remoteOpenMap",function(b,c,d){a.mapData.markers[c].focus=!0,a.mapData.markers[c]&&a.mapData.markers[c].shown&&(d&&(a.mapData.setup.zoom=13,a.mapData.setup.lat=a.mapData.markers[c].lat,a.mapData.setup.lng=a.mapData.markers[c].lng),a.mapData.markers[c].focus=!1,f(function(){a.mapData.markers[c].focus=!0,a.mapData.setup.lat=a.mapData.markers[c].lat,a.mapData.setup.lng=a.mapData.markers[c].lng},1))}),a.resetMinMap=function(){b.minMapData={minMapID:"minMap_elevation",path:{},controls:{fullscreen:{position:"topleft"}},markers:{},selectedMarker:{},feature:{},ready:!1,error:!1}},a.resetMinMap(),a.loadMinMapDetails=function(c){b.selectedTabIndex=null,f(function(){b.selectedTabIndex=1},500),a.resetMinMap(),b.minMapData.selectedMarker=a.mapData.markers[c],a.getWalkFile(c)},a.getWalkFile=function(a){d.when(g.getWalkFile(a)).then(function(a){var c=g.getMinMapSettings(a);b.minMapData.path=c.path,b.minMapData.markers=c.markers,b.minMapData.feature=c.feature,b.minMapData.ready=!0,f(function(){h.getMap(b.minMapData.minMapID).then(function(a){b.minMapObject=a})},1)},function(a){console.error("Error retreiving analysis data"),b.minMapData.error=!0})},d.when(e.getMarkers()).then(function(c){_.forEach(c,function(b,d){c[d].getMessageScope=function(){return a},c[d].compileMessage=!0}),a.mapData.markers=c,b.markers=a.mapData.markers,a.focusOnLastWalk()},function(a){}),f(function(){h.getMap("mainWalkMap").then(function(c){a.mapData.map=c,e.addMapSearch(a.mapData.map),h.getLayers("mainWalkMap").then(function(a){b.walkMarkersLayers=a.overlays.walkMarkers._layers})})},50)}]),angular.module("walkFilterApp").controller("ControlsCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("walkFilterApp").controller("DataloaderCtrl",function(){}),angular.module("walkFilterApp").factory("data",["$http","infowindowFactory","$q","$rootScope",function(a,b,c,d){function e(a,b){j.geocode({address:a,bounds:k,region:"AU"},b)}function f(a){var b,c,d={};for(var e in a)b=a[e].formatted_address,c=L.latLng(a[e].geometry.location.lat(),a[e].geometry.location.lng()),d[b]=c;return d}a.get("./config/parkDetails.json").then(function(a){d.parksVic=a.data});var g={},h={},i=[-47.346267,106.699219,-10.239249,160.488281],j=new google.maps.Geocoder,k=new google.maps.LatLngBounds(new google.maps.LatLng(i[0],i[1]),new google.maps.LatLng(i[2],i[3])),l={},m=0,n=0,o=function(){var d=c.defer();return a.get("./config/processedWalkData.json").then(function(a){_.forEach(a.data,function(a,c){if(c=c.replace("-","_").replace("-","_").replace("-","_").replace("-","_").replace("-","_").replace("-","_").replace("-","_").replace("-","_").replace("-","_").replace("-","_"),a.start&&a.start.lat&&a.start.lng||a.Latitude&&a.Longitude&&!isNaN(a.Latitude)&&!isNaN(a.Longitude)&&0!=a.Latitude&&0!=a.Longitude){if(a.key=c,a.shown=!0,a.hashStringID||(a.hashStringID=c),g[a.hashStringID]=c,h[c]=a.hashStringID,l[c]={layer:"walkMarkers"},a.start&&a.start.lat&&a.start.lng?(l[c].lat=Number(a.start.lat),l[c].lng=Number(a.start.lng),a.Latitude=Number(a.start.lat),a.Longitude=Number(a.start.lng)):(l[c].lat=Number(a.Latitude),l[c].lng=Number(a.Longitude)),0==l[c].lat||0==l[c].lng,a.duration.indexOf("day")>-1&&(a.duration_raw=48),a.grade_raw||(isNaN(a.grade)?(a.grade=!isNaN(a.grade[0]))?a.grade_raw=Number(a.grade[0])+.5:a.grade_raw=2.1:a.grade_raw=Number(a.grade)),l[c].data=a,l[c].data.url||(l[c].data.url="https://www.trailhiking.com.au/"+a.page),a.gpsDetails&&(a.gpsDetails.totaleledown||a.gpsDetails.totaleleup)){var d=0;if(a.gpsDetails.totaleledown)var d=-1*a.gpsDetails.totaleledown;d<a.gpsDetails.totaleleup&&(d=a.gpsDetails.totaleleup),l[c].data.maxClimb=d,d>m&&(m=d,n=a)}l[c].message=b.getText(a),l[c].icon=b.getIcon(a,Math.round(Number(a.grade))-1),l[c].title=a.title}}),d.resolve(l)}),d.promise};return{getMarkers:function(){return o()},addMapSearch:function(a){a.addControl(new L.Control.Search({sourceData:e,formatData:f,markerLocation:!0,autoType:!1,autoCollapse:!0,minLength:2}))},getKeyFromMarkerHash:function(a){var b=null;return a&&g[a]&&(b=g[a]),b},getHashFromMarkerKey:function(a){var b=null;return a&&h[a]&&(b=h[a]),a}}}]),angular.module("walkFilterApp").factory("infowindowFactory",["magicNumbers",function(a){var b=function(a,b){var c="",a=a;c+=a.url&&a.thumb?"<a target='_blank' href='"+a.url+"'><h3>"+a.title+"</h3></a>":"<h3>"+a.title+"</h3>";var d="";return d=a.url&&a.thumb?"<a target='_blank' href='"+a.url+"'>"+a.title+"</a>":a.title,c="<md-card >",c+='<md-card-title>  <md-card-title-text>  <span class="md-headline">'+d+"</span>",a.location&&(c+='<span class="md-subhead">',c+=a.location+" ("+a.closest_town+","+a.state+")",c+="</span>"),c+="</md-card-title-text> </md-card-title>",c+='<md-divider style="    margin: 0 16px;"></md-divider><md-card-content>',c+='<div layout="row" layout-xs="column"><div flex>',c+='<div class="walkPeramsList">',c+='<div class="walkPeram"> <span class="title"> Distance: </span><span class="value">'+a.distance+"</span></div>",c+='<div class="walkPeram"> <span class="title"> Duration: </span><span class="value">'+a.duration+"</span></div>",c+='<div class="walkPeram"> <span class="title"> Grade: </span><span class="value">'+a.grade+"</span></div>",c+='<div class="walkPeram"> <span class="title"> Style: </span><span class="value">'+a.style+"</span></div>",c+="<md-divider></md-divider>",c+="<a target='_blank' href='https://www.google.com/maps?saddr=My+Location&daddr="+a.Latitude+","+a.Longitude+"'> Directions </a><br>",c+="<a target='_blank' href='https://maps.google.com/?daddr="+a.Latitude+","+a.Longitude+"'>Show on map </a>",c+="</div>",c+='</div><div flex style="text-align:right" class="infoWindowImage" hide-xs>',a.thumb&&(c+="<img hide-xs style='height:108px;width:131px;' src='"+a.thumb+"'>"),c+="</div></div>",c+='<div hide-gt-md layout="row" style="padding-top:10px">',c+="<a hide-gt-md target='_blank' ng-click='openSideBar();' >View Map or more Information</a>",c+="</div>",c+="</md-card-content>",c+="</md-card>"};return{getText:function(a,c){var d=b(a);return d},getIcon:function(b,c){return{type:"awesomeMarker",icon:"blind",markerColor:a.getColors()[c],prefix:"fa"}}}}]),angular.module("walkFilterApp").factory("magicNumbers",function(){var a={markers:{},setup:{lat:-37.8136,lng:144.9631,zoom:8},layers:{baselayers:{osm:{name:"OpenStreetMap",url:"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",type:"xyz",layerParams:{attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}},Thunderforest_OpenCycleMap:{name:"Thunderforest-OpenCycleMap",url:"http://{s}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png",type:"xyz",layerParams:{attribution:'&copy; <a href="http://www.thunderforest.com/">Thunderforest</a>, &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}},HikeBike_HikeBike:{name:"BikeHike",url:"http://{s}.tiles.wmflabs.org/hikebike/{z}/{x}/{y}.png",type:"xyz",layerParams:{attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}},openCycleMap:{name:"Open Cycle Map",url:"http://a.tile3.opencyclemap.org/landscape/{z}/{x}/{y}.png",type:"xyz",layerParams:{attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}}},overlays:{walkMarkers:{name:"walkMarkers",type:"group",visible:!0,layerParams:{showOnSelector:!1}}}}},b=["green","darkgreen","blue","red","darkpurple","cadetblue","purple","lightgreen","pink","red"],c=[{field:"distance_raw",title:"Distance",type:"slider",units:"km",value:[0,30],"default":[0,30],options:{floor:0,ceil:30}},{field:"duration_raw",title:"Duration",type:"slider",units:"hrs",value:[0,14],"default":[0,14],options:{floor:1,ceil:14}},{field:"maxClimb",title:"Max Climb",type:"slider",units:"m",value:[0,1300],"default":[0,1300],options:{floor:0,ceil:1300}},{field:"distance_from_state_capital_raw",title:"Distance from CBD",type:"slider",units:"km",value:[0,300],"default":[0,300],options:{floor:0,ceil:300}},{field:"grade_raw",title:"Grade",type:"slider",units:"",value:[1,5],"default":[1,5],options:{floor:1,ceil:5}},{field:"style",title:"Exclude one way",type:"boolean",trueValues:["return","circuit"],value:!1,"default":!1},{field:"style",title:"Only show one way",type:"boolean",trueValues:["one"],value:!1,"default":!1}];return{getColors:function(){return b},getMenuSetup:function(){return c},getMapSetup:function(){return a}}}),angular.module("walkFilterApp").factory("getwalkmap",["$http","$q",function(a,b){var c={},d=function(d){var e=b.defer(),f=d.replace("_","-").replace("_","-").replace("_","-").replace("_","-").replace("_","-").replace("_","-"),g="./config/maps/"+f+".json";return c[g]?c[g].error?e.reject(null):e.resolve(c[g]):a.get(g).success(function(a){c[g]=a,e.resolve(a)}).error(function(a){c[g]={error:!0},e.reject(null)}),e.promise};return{getWalkFile:function(a){return d(a)},getMinMapSettings:function(a){var b=[],c=[];if(a.linestring&&a.geomArray)var b=a.linestring,c=a.geomArray;else a.geomArray?_.forEach(a.geomArray,function(d,e){b[e]={lat:Number(d[1]),lng:Number(d[0])},c=a.geomArray}):a.mapData?_.forEach(JSON.parse(a.mapData),function(a,d){b[d]={lat:Number(a[0]),lng:Number(a[1])},c[d]=[Number(a[1]),Number(a[0])]}):a.theMapArray&&_.forEach(a.theMapArray,function(a,d){b[d]={lat:Number(a[1]),lng:Number(a[0])},c[d]=[Number(a[0]),Number(a[1])]});var d={line:{color:"#008000",weight:4,latlngs:b}},e={finish:{lat:Number(c[c.length-1][1]),lng:Number(c[c.length-1][0]),message:"finish",icon:{type:"awesomeMarker",icon:"flag",markerColor:"red",prefix:"fa"}},start:{lat:Number(c[0][1]),lng:Number(c[0][0]),message:"start",icon:{type:"awesomeMarker",icon:"blind",markerColor:"green",prefix:"fa"}}},f=turf.linestring(c,{stroke:"#6BC65F","stroke-width":5}),g=turf.centroid(f);return{path:d,center:g,feature:f,markers:e,mapSetup:{lat:g.geometry.coordinates[0],lng:g.geometry.coordinates[1],zoom:14}}}}}]),angular.module("walkFilterApp").directive("mapfilters",["$rootScope","$timeout",function(a,b){return{restrict:"E",templateUrl:"views/directives/filters.html",scope:{markerfilterconfig:"="},link:function(c,d,e){c.filterMarkers=function(){var b=a.markers,d=JSON.parse(JSON.stringify(c.markerfilterconfig));_.forEach(d,function(a,b){if("slider"==a.type){var c=Number(a.value[0]),e=Number(a.value[1]);c<=a.options.floor&&(d[b].value[0]=-1e10),e>=a.options.ceil&&(d[b].value[1]=1e10)}}),_.forEach(b,function(a,c){var e=!0,f=Number(a.data.Latitude),g=Number(a.data.Longitude);_.forEach(d,function(b){var c=b.field,d=a.data[c];if("slider"==b.type){var h=Number(b.value[0]),i=Number(b.value[1]);!d||e&&d&&d>=h&&i>=d||(e=!1,f=0,g=0)}if("boolean"==b.type&&1==b.value){var j=!1,k=d.toLowerCase();_.forEach(b.trueValues,function(a){k.indexOf(a.toLowerCase())>-1&&(j=!0)}),j||(e=!1,f=0,g=0)}}),b[c].lat!=f,a.shown!=e&&(b[c].shown=e)}),_.forEach(a.walkMarkersLayers,function(a,c){if(a.options.data.key){var d=a.options.data.key;0==b[d].shown?(L.DomUtil.addClass(a._icon,"hiddenMarker"),L.DomUtil.addClass(a._shadow,"hiddenMarker")):(L.DomUtil.removeClass(a._icon,"hiddenMarker"),L.DomUtil.removeClass(a._shadow,"hiddenMarker"))}})},c.resetFilters=function(){_.forEach(c.markerfilterconfig,function(a,b){c.markerfilterconfig[b].value=JSON.parse(JSON.stringify(a["default"]))}),c.filterMarkers()},b(function(){c.filterMarkers()},300)}}}]).filter("markerFilter",function(){return function(a,b){return a}}),angular.module("walkFilterApp").directive("minimap",["$rootScope",function(a){return{restrict:"E",templateUrl:"views/directives/minimap.html",scope:{minmapdata:"="},link:function(a,b,c){}}}]),angular.module("walkFilterApp").directive("elevationmap",["$rootScope","$timeout","leafletData",function(a,b,c){return{restrict:"E",templateUrl:"views/directives/elivationmap.html",scope:{minmapdata:"="},link:function(a,d,e){b(function(){a.mapId=a.minmapdata.minMapID,c.getMap(a.mapId).then(function(c){a.elevationMap=c,b(function(){f()},3)})},1);var f=function(){if(a.elevationMap){var b=a.minmapdata.feature,c=L.control.elevation({position:"bottomright",theme:"steelblue-theme",width:jQuery("#"+a.mapId).width(),height:125,useHeightIndicator:!1});a.controls={fullscreen:{position:"topleft"}},c.addTo(a.elevationMap);var d=new L.Control.Fullscreen;d.addTo(a.elevationMap);var e=L.geoJson(b,{onEachFeature:c.addData.bind(c)}).addTo(a.elevationMap);a.elevationMap.fitBounds(e,{paddingBottomRight:[0,200]})}}}}}]),angular.module("walkFilterApp").directive("walklist",["$rootScope",function(a){return{restrict:"E",templateUrl:"views/directives/walklist.html",scope:{walks:"="},link:function(b,c,d){b.focusOnMarker=function(b,c){a.$broadcast("remoteOpenMap",b,c)}}}}]),angular.module("walkFilterApp").factory("mapevents",function(){var a=42;return{someMethod:function(){return a}}}),angular.module("walkFilterApp").factory("locationString",["$location",function(a){var b=a.hash(),c=a.search();return{getInitalWalkHash:function(){var a=!1;if(b.indexOf("walk=")>-1&&b.indexOf("&id=")>-1){var c=b.split("walk=")[1].split("&id=")[0];return b.indexOf("zoom=true")>-1&&(a=!0),{hash:c,zoom:a}}return{hash:null,zoom:a}},getInitalSearch:function(){return c},setHash:function(b){b&&a.hash(b)},setWalkHash:function(b){b&&a.hash("walk="+b+"&id="+Math.round(1e5*Math.random(10)))},setSearch:function(b){b&&a.search(hash)}}}]),angular.module("walkFilterApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/directives/elivationmap.html",'<div ng-if="minmapdata.selectedMarker.title"> <h2 style="padding: 0;margin: 0 0 5px 0; font-size: 24px;">{{minmapdata.selectedMarker.title}}</h2> <leaflet ng-if="minmapdata.ready" id="{{minmapdata.minMapID}}" xcontrols="controls" paths="minmapdata.path" markers="minmapdata.markers" defaults="{scrollWheelZoom: false}" height="350px" width="100%"> </leaflet> </div>'),a.put("views/directives/filters.html",'<div> <h1 style="padding:0;margin:0">Filters</h1> <div ng-repeat="(key, value) in markerfilterconfig"> <div ng-if="value.type==\'slider\'"> <strong>{{value.title}}</strong> <div layout="row"> <span flex="15">{{value.value[0]}} {{value.units}}</span> <span flex="65"> <slider ng-change="filterMarkers()" sliderid="value.field" ng-model="value.value" min="value.options.floor" step="1" max="value.options.ceil" range="true" ng-model-options="{ debounce: 100 }" slider-tooltip="hide"></slider> </span> <span flex="5"> </span> <span layout="colum" flex="15">{{value.value[1]}} {{value.units}}</span> </div> <br> </div> <div ng-if="value.type==\'boolean\'"> <md-switch ng-model="value.value" aria-label="{{value.title}}" ng-change="filterMarkers()"> {{ value.title }} : {{value.value}} </md-switch> </div> <md-divider></md-divider> </div> <section> <md-button class="md-raised md-warn" ng-click="resetFilters()">Reset</md-button> </section> <div><h1 style="padding:0;margin:0">Legend</h1> <table> <tr> <td style="text-align:right"><strong>Grade:</strong></td> <td>1</td> <td>2</td> <td>3</td> <td>4</td> <td>5</td> </tr> <tr> <td style="text-align:right"><strong>Icon:</strong></td> <td> <div class="awesome-marker-icon-green awesome-marker leaflet-zoom-animated leaflet-clickable" title="Old River Circuit" tabindex="0" style="position:inherit"><i class="fa fa-blind icon-white"></i></div> </td> <td> <div class="awesome-marker-icon-darkgreen awesome-marker leaflet-zoom-animated leaflet-clickable" title="Old River Circuit" tabindex="0" style="position:inherit"><i class="fa fa-blind icon-white"></i></div> </td> <td> <div class="awesome-marker-icon-blue awesome-marker leaflet-zoom-animated leaflet-clickable" title="Old River Circuit" tabindex="0" style="position:inherit"><i class="fa fa-blind icon-white"></i></div> </td> <td> <div class="awesome-marker-icon-red awesome-marker leaflet-zoom-animated leaflet-clickable" title="Old River Circuit" tabindex="0" style="position:inherit"><i class="fa fa-blind icon-white"></i></div> </td> <td> <div class="awesome-marker-icon-darkpurple awesome-marker leaflet-zoom-animated leaflet-clickable" title="Old River Circuit" tabindex="0" style="position:inherit"><i class="fa fa-blind icon-white"></i></div> </td> </tr> </table> </div> </div>'),a.put("views/directives/minimap.html",'<div ng-if="minmapdata.selectedMarker.title" class="walkPeramsList"> <div ng-if="minmapdata.error"> <h1>map failed to load</h1></div> <div> <div layout="column"> <div flex> <div class="walkPeram"> <span class="title"> Location: </span>{{minmapdata.selectedMarker.data.location}}, {{minmapdata.selectedMarker.data.closest_town}}({{minmapdata.selectedMarker.data.state}}) </div> </div> </div> <md-divider style=""></md-divider> <div layout="row"> <div flex> <div class="walkPeram"> <span class="title">Distance:</span> {{minmapdata.selectedMarker.data.distance}} </div> <div class="walkPeram"> <span class="title">Duration:</span> {{minmapdata.selectedMarker.data.duration}} </div> <div class="walkPeram"> <span class="title">Grade:</span> {{minmapdata.selectedMarker.data.grade}} </div> <div class="walkPeram"> <span class="title">Style:</span> {{minmapdata.selectedMarker.data.style}} </div> <div class="walkPeram"> <span class="title">From CBD:</span> {{minmapdata.selectedMarker.data.distance_from_state_capital}} </div> <div class="walkPeram" ng-if="minmapdata.selectedMarker.data.thumb"> <span class="title">Walk from:</span> <a target="_blank" ng-href="{{minmapdata.selectedMarker.data.url}}">trailhiking.com.au</a> </div> </div> <div flex> <div class="walkPeram"> <span class="title">Max Altitude:</span> {{minmapdata.selectedMarker.data.gpsDetails.maxele}}m </div> <div class="walkPeram"> <span class="title">Min Altitude:</span> {{minmapdata.selectedMarker.data.gpsDetails.minele}}m </div> <div class="walkPeram"> <span class="title">Total Climb:</span> {{minmapdata.selectedMarker.data.gpsDetails.totaleleup}}m </div> <div class="walkPeram"> <span class="title">Total Descent:</span> {{minmapdata.selectedMarker.data.gpsDetails.totaleledown}}m </div> <div class="walkPeram"> <span class="title">GPX File:</span> <a target="_blank" ng-href="{{minmapdata.selectedMarker.data.gpsUrl}}">Download</a> </div> <span class="title">Google:</span> <a target="_blank" ng-href="https://www.google.com/maps?saddr=My+Location&daddr={{minmapdata.selectedMarker.data.Latitude}},{{minmapdata.selectedMarker.data.Longitude}}">Directions</a>, <a target="_blank" ng-href="https://maps.google.com/?daddr={{minmapdata.selectedMarker.data.Latitude}},{{minmapdata.selectedMarker.data.Longitude}}">Show On Map</a> </div> </div> </div> <md-divider style=""></md-divider> <div layout="column" ng-repeat="(key, value) in minmapdata.selectedMarker.data.parks"> <div flex> <div class="walkPeram"> <span class="title">Park Details: </span><a target="_blank" ng-href="{{$root.parksVic[key].parkDetails[0].url}}">{{value}}({{key}})</a> <div class="walkPeram"> {{$root.parksVic[key].parkDetails[0].description}} <br> <span class="title">Park Rating: </span>{{$root.parksVic[key].parkDetails[0].rating}} </div> </div> </div> </div> </div>'),a.put("views/directives/walklist.html",'<div> <div ng-repeat="(key, value) in walks" ng-click="focusOnMarker(value.data.key, false)" ng-dblclick="focusOnMarker(value.data.key, true)" ng-if="value.shown"> {{value.data.title}} </div> </div>'),a.put("views/main.html",""),a.put("views/map.html",'<div ng-controller="MapCtrl" class="row" height="100%" style="height:100%;margin:0;padding: 0;width:100%"> <leaflet id="mainWalkMap" layers="mapData.layers" controls paths="minMapData.path" lf-center="mapData.setup" width="100%" height="100%" markers="mapData.markers | markerFilter:markerFilterConfig "></leaflet> </div>')}]);